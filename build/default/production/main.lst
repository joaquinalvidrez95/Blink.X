CCS PCM C Compiler, Version 5.015, 5967               14-sep.-17 23:47

               Filename:   C:\Users\joaquinalan\MPLABXProjects\Blink.X\build\default\production\main.lst

               ROM used:   124 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           11 (3%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   060
0003:  NOP
.................... /*  
....................  * File:   main.c 
....................  * Author: joaquinalan 
....................  * 
....................  * Created on 14 de septiembre de 2017, 11:40 AM 
....................  */ 
....................  
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
0004:  MOVF   22,W
0005:  ANDLW  07
0006:  MOVWF  77
0007:  RRF    22,W
0008:  MOVWF  78
0009:  RRF    78,F
000A:  RRF    78,F
000B:  MOVLW  1F
000C:  ANDWF  78,F
000D:  MOVF   78,W
000E:  ADDWF  24,W
000F:  MOVWF  04
0010:  BCF    03.7
0011:  BTFSC  25.0
0012:  BSF    03.7
0013:  CLRF   78
0014:  INCF   78,F
0015:  INCF   77,F
0016:  GOTO   018
0017:  RLF    78,F
0018:  DECFSZ 77,F
0019:  GOTO   017
001A:  MOVF   23,F
001B:  BTFSC  03.2
001C:  GOTO   020
001D:  MOVF   78,W
001E:  IORWF  00,F
001F:  GOTO   023
0020:  COMF   78,F
0021:  MOVF   78,W
0022:  ANDWF  00,F
0023:  RETURN
....................  
.................... #list 
....................  
.................... #FUSES HS, PUT, NOLVP, PROTECT,NOMCLR, BROWNOUT 
.................... #use delay(clock=20M) 
0024:  MOVLW  23
0025:  MOVWF  04
0026:  BCF    03.7
0027:  MOVF   00,W
0028:  BTFSC  03.2
0029:  GOTO   037
002A:  MOVLW  06
002B:  MOVWF  78
002C:  CLRF   77
002D:  DECFSZ 77,F
002E:  GOTO   02D
002F:  DECFSZ 78,F
0030:  GOTO   02C
0031:  MOVLW  7B
0032:  MOVWF  77
0033:  DECFSZ 77,F
0034:  GOTO   033
0035:  DECFSZ 00,F
0036:  GOTO   02A
0037:  RETURN
....................  
.................... #use standard_io(c) 
....................  
.................... #include <blink.c> 
....................  
.................... void blinkLed(int ledPin) { 
....................     output_high(ledPin); 
0038:  MOVF   21,W
0039:  MOVWF  22
003A:  MOVLW  01
003B:  MOVWF  23
003C:  CLRF   25
003D:  CLRF   24
003E:  CALL   004
003F:  MOVF   21,W
0040:  MOVWF  22
0041:  CLRF   23
0042:  CLRF   25
0043:  MOVLW  80
0044:  MOVWF  24
0045:  CALL   004
....................     delay_ms(500); 
0046:  MOVLW  02
0047:  MOVWF  22
0048:  MOVLW  FA
0049:  MOVWF  23
004A:  CALL   024
004B:  DECFSZ 22,F
004C:  GOTO   048
....................     output_low(ledPin); 
004D:  MOVF   21,W
004E:  MOVWF  22
004F:  CLRF   23
0050:  CLRF   25
0051:  CLRF   24
0052:  CALL   004
0053:  MOVF   21,W
0054:  MOVWF  22
0055:  CLRF   23
0056:  CLRF   25
0057:  MOVLW  80
0058:  MOVWF  24
0059:  CALL   004
....................     delay_ms(200); 
005A:  MOVLW  C8
005B:  MOVWF  23
005C:  CALL   024
005D:  BCF    0A.3
005E:  BCF    0A.4
005F:  GOTO   079 (RETURN)
.................... } 
....................  
....................  
....................  
.................... #define LED PIN_A0 
.................... #define DELAY 300 
....................  
.................... /* 
....................  *  
....................  */ 
.................... void main() { 
0060:  MOVF   03,W
0061:  ANDLW  1F
0062:  MOVWF  03
0063:  MOVLW  FF
0064:  MOVWF  20
0065:  BSF    03.5
0066:  BSF    03.6
0067:  MOVF   09,W
0068:  ANDLW  C0
0069:  MOVWF  09
006A:  BCF    03.6
006B:  BCF    1F.4
006C:  BCF    1F.5
006D:  MOVLW  00
006E:  BSF    03.6
006F:  MOVWF  08
0070:  BCF    03.5
0071:  CLRF   07
0072:  CLRF   08
0073:  CLRF   09
0074:  BCF    03.7
....................  
....................     while (TRUE) { 
....................         blinkLed(LED);         
0075:  MOVLW  28
0076:  BCF    03.6
0077:  MOVWF  21
0078:  GOTO   038
0079:  BSF    03.6
007A:  GOTO   075
....................     } 
.................... } 
007B:  SLEEP

Configuration Fuses:
   Word  1: 2F82   HS NOWDT PUT NOMCLR PROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
